---
layout: base.njk
title: Club Store
description: Get exclusive merch, membership, materials, and more!
googleAnalyticsId: { { site.googleAnalyticsId } }
---

<!-- Wrapper -->
<div id="wrapper" class="divided">

  <!-- OnLoad Modal (when the user first lands on the page) -->
  <div class="modal fade onload-modal" tabindex="-1" aria-labelledby="onloadModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <div>
            <h4 class="modal-title" id="onloadModalLabel">Welcome to our Club Store!</h4>
          </div>
        </div>
        <div class="modal-body">
          <p>By using the Club Store, you agree to our <a href="https://docs.google.com/document/d/1pGtIp7QoiZ7fPP1KXVEw85TiWYM2SDL1Vo1zUNRaqHU/edit?usp=sharing" target="_blank">Terms of Service and Privacy Policy</a>. Here are some key points:</p>
          <ul>
            <li>Physical items are usually only for in-person pickup at UCSD, SDF, or IBFM.</li>
            <li>Order turnaround and pickup times are subject to change.</li>
            <li>All sales are final (No refunds, but we allow some changes.)</li>
          </ul>
          <p>If you have any questions, please don't hesitate to ask :3</p>
        </div>
        <div class="modal-footer">
          <button class="btn btn-primary" data-bs-dismiss="modal">Agree and continue</button>
          <a class="btn btn-secondary" href="javascript:history.back()">Go back</a>
        </div>
      </div>
    </div>
  </div>

  <!-- Item Modal -->
  <div class="modal fade" id="itemModal" tabindex="-1" aria-labelledby="itemModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <div>
            <h4 class="modal-title" id="itemModalLabel">Title</h4>
            {# <p>Short Description</p> #}
          </div>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" style="box-shadow: none;"></button>
        </div>
        <div class="modal-body">
            <img id="item-modal-image" src="/assets/images/store/beach_1.png" style="width: 100%; aspect-ratio: 1/1; border-radius: 16px; max-width: 500px; object-fit: contain;">
          <div class="options-list">
            <!-- Options -->
            <div class="mcq">
              <div class="mcq-header">
                <h6>Item options:</h6>
              </div>
              <div class="mcq-options">
                <button class="btn btn-sm btn-secondary">Option A</button>
                <button class="btn btn-sm btn-light">Option B</button>
              </div>
            </div>

            <!-- Description -->
            <p id="item-modal-description">
              Full item description
            </p>
          </div>
        </div>
        <div class="modal-footer">
          <div style="flex-grow: 1">
            <p id="item-modal-price">$Price</p>
            <p style="font-size: small; opacity: 50%;">Taxes &amp; fees already included</p>
          </div>
          <div class="cart-item-actions">
            <button class="btn btn-outline-secondary" id="item-modal-quantity-down">–</button>
            <span class="cart-item-quantity" id="item-modal-quantity">1</span>
            <button class="btn btn-outline-secondary" id="item-modal-quantity-up">+</button>
            <button id="item-modal-purchase" class="btn btn-primary" data-bs-dismiss="modal" data-price-id="price_PLACEHOLDER">Buy Now</button>
          </div>
        </div>
        <!-- Different footer state for when item is added to cart:
        <div class="modal-footer" style="display: none;">
          <div style="flex-grow: 1">
            <p>$25</p>
            <p style="font-size: small; opacity: 50%;">Sales tax already included</p>
          </div>
          <span class="me-2">Added to cart!</span>
          <button class="btn btn-secondary" data-bs-dismiss="modal">View Cart</button>
        </div>
        -->
      </div>
    </div>
  </div>

  <!-- Cart Modal -->
  <div class="modal fade" id="cartModal" tabindex="-1" aria-labelledby="cartModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <div>
            <h4 class="modal-title" id="cartModalLabel">Your Cart</h4>
            <p>Item Count</p>
          </div>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" style="box-shadow: none;"></button>
        </div>
        <div class="modal-body">
          <div class="cart-item">
            <img src="/assets/images/store/beach_1.png">
            <div class="cart-item-details">
              <div class="cart-item-header">
                <p style="flex-grow: 1">Item Title</p>
                <p>$Price</p>
              </div>
              <p>Item Options</p>
              <div class="cart-item-actions mt-2">
                <button class="btn btn-sm btn-outline-secondary">–</button>
                <span class="cart-item-quantity">1</span>
                <button class="btn btn-sm btn-outline-secondary">+</button>
                <button class="btn btn-sm btn-link" style="color: gray">Delete</button>
              </div>
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <div style="flex-grow: 1">
            <p>Total: $Price</p>
            <p style="font-size: small; opacity: 50%;">Taxes &amp; fees already included</p>
          </div>
          <button class="btn btn-secondary" data-bs-dismiss="modal">Continue Shopping</button>
          <a class="btn btn-primary" href="/pages/store/store-order-details.html">Checkout</a>
        </div>
      </div>
    </div>
  </div>

  <!-- Store Area -->
  <section class="wrapper style1">
    <div class="inner">
      <div class="store-area">
        <div class="store-header">
          <div class="store-header-text">
            <h2>Club Store</h2>
            <p>Get exclusive merch, membership, materials, and more!</p>
          </div>
          <!-- <button class="button primary" data-bs-toggle="modal" data-bs-target="#cartModal">Cart (0)</button> -->
        </div>
        {% for collection in store.collections %}  
          <div class="store-aisle">
            <div>
              <h4 class="mb-1">{{ collection.title }}</h4>
              <p class="mb-1">{{ collection.description }}</p>
            </div>
            <div class="scrollable-container-x">
              <div 
                {% if collection.isFeatured %}
                  class="store-row store-row-featured"
                {% else %}
                  class="store-row"
                {% endif %}
              >
                <div class="scroll-edge-overlay"></div>
                {% for item in collection.items %}
                    <button class="store-item"
                      data-bs-toggle="modal"
                      data-bs-target="#itemModal"
                      data-item-info="{{ item | dump }}"
                    >
                    <img src="{{ item.image }}">
                    <p>
                      <b>{{ item.name }}</b>
                      <br>
                      {% if item.shortDesc %}
                        <!-- Display the short description, if there is one -->
                        {{ item.shortDesc }}
                      {% elif item.variants and item.variants|length > 0 and item.variants[0].price %}
                        <!-- Display the price, if there is one -->
                        ${{ item.variants[0].price }}
                      {% endif %}
                    </p>
                    </button>
                {% endfor %}
              </div>
            </div>
          </div>
        {% endfor %}
      </div>
    </div>
  </section>

</div>

<!-- Stripe Code -->
<script src="https://js.stripe.com/v3/"></script>
<script>
  // Your own publishable key: https://dashboard.stripe.com/test/apikeys
  var PUBLISHABLE_KEY = "pk_test_51RCftNPQmYquuuIRN5HV3rb461GA119I3cb4PSgXE2iM2ObtvdkpkpAhBSyHknEvRTo22y2vAUcdJrwKiPCQ221f00CuHKc72G";
  // The domain you want your users to be redirected back to after payment
  var DOMAIN = location.href.replace(/[^/]*$/, "");

  var stripe = Stripe(PUBLISHABLE_KEY);

  // Clear the Item Modal data that would be populated from a variant
  function resetVariant() {
    var itemModal = document.getElementById("itemModal");
    itemModal.querySelector(".mcq").style.display = "none";
    itemModal.querySelector("#item-modal-price").textContent = "$-- each";
    itemModal.querySelector("#item-modal-purchase").dataset.priceId = "Item is not yet for sale";
    itemModal.querySelector("#item-modal-description").textContent = "Item is not yet for sale";
  }

  // Update the Item Modal with a given Variant
  function selectVariant(item, selectedVariant) {
    var itemModal = document.getElementById("itemModal");

    // Update the details from the selected variant: Price, PriceId, and description
    itemModal.querySelector("#item-modal-price").textContent = "$" + selectedVariant.price + " each";
    itemModal.querySelector("#item-modal-purchase").dataset.priceId = selectedVariant.priceId;
    itemModal.querySelector("#item-modal-description").textContent = selectedVariant.description;

    // If there is an item-specific image, use it
    itemModal.querySelector("#item-modal-image").src = item.image;
    if (selectedVariant.image) {
      itemModal.querySelector("#item-modal-image").src = selectedVariant.image;
    }

    // Check if there is more than one variant
    if (item.variants.length > 1) {
      // Show the options list
      itemModal.querySelector(".mcq").style.display = "block";

      // Populate the options list (mcq-options) with the variants
      var optionsList = itemModal.querySelector(".mcq-options");
      optionsList.innerHTML = ""; // Clear previous options
      for (let variant of item.variants) {
        var button = document.createElement("button");
        button.className = "btn btn-sm btn-secondary me-2";
        button.textContent = variant.name;
        optionsList.appendChild(button);

        // If this is the currently selected variant, replace the btn-secondary class with btn-primary
        if (variant.name === selectedVariant.name) {
          button.classList.remove("btn-secondary");
          button.classList.add("btn-primary");
        }

        // Clicking the button should switch to that variant
        button.addEventListener("click", function() { selectVariant(item, variant) });
      }
    }  
  }

  // When a shop item is clicked, fill the Item Modal with the details of the item.
  document.querySelectorAll(".store-item").forEach(function(button) {
    button.addEventListener("click", function(e) {
      
      // Get the item info
      var item = JSON.parse(button.dataset.itemInfo);

      // Set up the basic item details
      var itemModal = document.getElementById("itemModal");
      itemModal.querySelector("#itemModalLabel").textContent = item.name;
      itemModal.querySelector("#item-modal-image").alt = item.name;

      // Reset the item modal
      resetVariant();

      // Put an initial image into the item modal
      itemModal.querySelector("#item-modal-image").src = item.image;

      // Update the item modal with the variant details
      var firstVariant = item.variants[Object.keys(item.variants)[0]];
      selectVariant(item, firstVariant);
      
    });
  });

  // Cart Item Quantity
  var quantity = document.querySelector("#item-modal-quantity");
  var quantityUp = document.querySelector("#item-modal-quantity-up");
  var quantityDown = document.querySelector("#item-modal-quantity-down");
  quantityUp.addEventListener("click", function() {
    var currentQuantity = parseInt(quantity.textContent);
    quantity.textContent = currentQuantity + 1;
  });
  quantityDown.addEventListener("click", function() {
    var currentQuantity = parseInt(quantity.textContent);
    if (currentQuantity > 1) {
      quantity.textContent = currentQuantity - 1;
    }
  });

  // Purchase Button
  var purchaseButton = document.querySelector("#item-modal-purchase");
  purchaseButton.addEventListener("click", function(e) {
    var priceId = purchaseButton.dataset.priceId;
    var quantity = parseInt(document.querySelector("#item-modal-quantity").textContent, 10);
    var items = [{ price: priceId, quantity: quantity }];

    // Run sanity checks on the cart
    if (items.length === 0) {
      alert("Please add an item to your cart before checking out.");
      return;
    }
    // For each item, check that its quantity is at least 1
    for (var i = 0; i < items.length; i++) {
      if (items[i].quantity === null || items[i].quantity < 1) {
        alert("One of your items has an invalid quantity. Please check your cart and try again.");
        return;
      }
    }

    // Make the call to Stripe.js to redirect to the checkout page
    stripe
      .redirectToCheckout({
      lineItems: items,
      mode: "payment",
      successUrl:
        DOMAIN + "?result=success&session_id={CHECKOUT_SESSION_ID}",
      cancelUrl:
        DOMAIN + "?result=canceled&session_id={CHECKOUT_SESSION_ID}"
      })
      .then()
      .catch(function(error) {
        console.error("Unexpected error:", error.type, error.message);
        alert("Oops -- Please try again and let us know if this error keeps happening. (" + error.type + ": " + error.message + ")");
      });
  });

  // Handle Success and Failure
  const urlParams = new URLSearchParams(window.location.search);
  const result = urlParams.get('result');
  if (result === 'success') {
    alert('Success! Thank you for your purchase. We\'ll review your order and send you updates as needed.');
  } else if (result === 'canceled') {
    alert('Ah, it looks like you canceled the payment. No worries, you can try again later :3');
  }

  // Show a warning when the user tries to leave the page
  window.addEventListener("beforeunload", function (event) {
    event.preventDefault();
    event.returnValue = ""; // Use the default message (Most modern browsers ignore this for security reasons)
  });
</script>